name: Build and Release Action (TRAIN CREW)

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:

env:
  CSPROJ_PATH: ./TRViS.LocalServers.TrainCrew/TRViS.LocalServers.TrainCrew.csproj
  TARGET_FRAMEWORK: net48

jobs:
  build:
    if: |
      !failure()
      && !cancelled()
      && (
        github.event_name != 'pull_request'
        || github.event.pull_request.draft == false
      )

    runs-on: windows-latest
    timeout-minutes: 5

    env:
      ZIP_DIR: ./zip/TRViS.LocalServers.TrainCrew

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ConnectHelper/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('ConnectHelper/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: yarn install
        run: yarn install --frozen-lockfile
        working-directory: ./ConnectHelper

      - name: yarn update-license
        run: yarn update-license
        working-directory: ./ConnectHelper

      - name: yarn build
        run: yarn build
        working-directory: ./ConnectHelper

      - name: Upload index.html
        uses: actions/upload-artifact@v4
        with:
          name: index.html
          path: ./ConnectHelper/dist/index.html

      - name: get license disclaimer
        run: yarn licenses generate-disclaimer > LICENSE-NODE.md
        working-directory: ./ConnectHelper
      - name: Upload LICENSE-NODE.md
        uses: actions/upload-artifact@v4
        with:
          name: LICENSE-NODE.md
          path: ./ConnectHelper/LICENSE-NODE.md

      - uses: actions/setup-dotnet@v4

      - name: cache nuget packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-dotnet-
      - name: Install dependencies
        run: dotnet restore ${{ env.CSPROJ_PATH }}

      - name: Build
        run: >
          dotnet publish ${{ env.CSPROJ_PATH }}
          -f ${{ env.TARGET_FRAMEWORK }}
          -c Release
          -o ".out"

      - name: Upload DLL
        uses: actions/upload-artifact@v4
        with:
          name: TRViS.LocalServers.TrainCrew
          path: .out
          retention-days: 3

      - name: Prepare release files
        run: |
          mkdir -p ${{ env.ZIP_DIR }}/TRViS.LocalServers.TrainCrew.deps
          mv .out/TRViS.LocalServers.TrainCrew.dll ${{ env.ZIP_DIR }}/
          mv .out/*.dll ${{ env.ZIP_DIR }}/TRViS.LocalServers.TrainCrew.deps/
          cp TRViS.LocalServers.TrainCrew/README.md ${{ env.ZIP_DIR }}/
          cp LICENSE ${{ env.ZIP_DIR }}/
          cp ConnectHelper/LICENSE-NODE.md ${{ env.ZIP_DIR }}/

      - name: Zip release files with zip
        run: 7z a -tzip TRViS.LocalServers.TrainCrew.zip ${{ env.ZIP_DIR }}
      - name: Upload ZIP
        uses: actions/upload-artifact@v4
        with:
          name: TRViS.LocalServers.TrainCrew.zip
          path: TRViS.LocalServers.TrainCrew.zip

      - name: Zip release files with 7z
        run: 7z a -t7z TRViS.LocalServers.TrainCrew.7z ${{ env.ZIP_DIR }}
      - name: Upload 7z
        uses: actions/upload-artifact@v4
        with:
          name: TRViS.LocalServers.TrainCrew.7z
          path: TRViS.LocalServers.TrainCrew.7z

      - name: Upload 7z&zip for release
        uses: actions/upload-artifact@v4
        with:
          name: TRViS.LocalServers.TrainCrew.release
          path: |
            TRViS.LocalServers.TrainCrew.zip
            TRViS.LocalServers.TrainCrew.7z
